<?xml version="1.0" encoding="utf-8"?>
<scraper framework="1.1" date="2012-03-12">
    <!-- version 2.3 -->

	<!-- input : $$1=nfo file -->
	<!-- output: <url>*</url> -->
    <NfoUrl dest="8">
        <RegExp input="$$1" output="&lt;url cache=&quot;SZ.detail-\1.xml&quot;&gt;http://api.serialzone.cz/xbmc/serial/\1/&lt;/url&gt;" dest="8">
            <expression>(?:https?://)(?:www\.)?serialzone.cz/serial/([^/]+)</expression>
        </RegExp>
    </NfoUrl>

	<!-- input : $$1=query string -->
	<!-- output: <url>*</url> -->
    <CreateSearchUrl dest="8">
        <RegExp input="$$1" output="&lt;url cache=&quot;SZ.hledani-\1.xml&quot;&gt;http://api.serialzone.cz/xbmc/?co=\1&lt;/url&gt;" dest="8">
            <expression/>
        </RegExp>
    </CreateSearchUrl>

	<!-- input : $$1=search html -->
	<!-- input : $$2=search url -->
	<!-- output: <results><entity><title>*</title><url>*</url></entity>*</results> -->
    <GetSearchResults dest="8">
        <XSLT input="$$1" output="\1" dest="8">
            <xsl:stylesheet version = "1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                <xsl:output encoding="UTF-8" indent="yes"/>
                <xsl:strip-space elements="*"/>
                <xsl:template match="data">
                    <results>
                        <xsl:apply-templates/>
                    </results>
                </xsl:template>
                <xsl:template match="tvshow">
                    <xsl:variable name="id" select="substring-before(substring-after(url, '/xbmc/serial/'), '/')"/>
                    <entity>
                        <title><xsl:value-of select="cz"/><xsl:if test="not(en=cz)"> (<xsl:value-of select="en"/>)</xsl:if></title>
                        <url><xsl:attribute name="cache">SZ.detail-<xsl:value-of select="$id"/>.xml</xsl:attribute>http://api.serialzone.cz/xbmc/serial/<xsl:value-of select="$id"/>/</url>
                        <year><xsl:choose><xsl:when test="contains(years, '-')"><xsl:value-of select="substring-before(years, '-')"/></xsl:when><xsl:otherwise><xsl:value-of select="years"/></xsl:otherwise></xsl:choose></year>
                    </entity>
                </xsl:template>                
            </xsl:stylesheet>
        </XSLT>
    </GetSearchResults>

	<!-- input : $$1=series html -->
	<!-- input : $$2=id -->
	<!-- input : $$3=series url -->
	<!-- output: <details><title>*</title><plot>*</plot><id>*</id>...etc...<episodeguide>*</episodeguide></details> -->
    <GetDetails dest="8">
        <XSLT input="$$1" output="\1" dest="8">
            <xsl:stylesheet version = "1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                <xsl:output encoding="UTF-8" indent="yes"/>
				<xsl:strip-space elements="*"/>
                <xsl:template match="data">
                    <xsl:variable name="id" select="substring-before(substring-after('$$3', '/xbmc/serial/'), '/')"/>
                    <details>
                        <title><xsl:value-of select="cz"/><xsl:if test="'$INFO[szsorigname]' = 'true' and not(cz = en)"> (<xsl:value-of select="en"/>)</xsl:if></title>
                        <originaltitle><xsl:value-of select="en"/></originaltitle>
                        <premiered><xsl:value-of select="firstaired"/></premiered>
                        <year><xsl:value-of select="yearstart"/></year>
                        <rating><xsl:attribute name="max">100</xsl:attribute><xsl:value-of select="rating"/></rating>
                        <xsl:for-each select="creators/creator">
                            <credits><xsl:value-of select="name"/></credits>
                        </xsl:for-each>
                        <xsl:copy-of select="plot|runtime|votes|director|genres/*|countries/*|actors/*|episodeguide"/>
                        <xsl:if test="imdb and not(imdb = 'tt0000000')">
                            <id><xsl:value-of select="imdb"/></id>
                            <uniqueid><xsl:attribute name="type">imdb</xsl:attribute><xsl:value-of select="imdb"/></uniqueid>
                            <url><xsl:attribute name="function">GetTVDBSeries</xsl:attribute><xsl:attribute name="cache">TVDB.remote-<xsl:value-of select="imdb"/></xsl:attribute>http://thetvdb.com/api/GetSeriesByRemoteID.php?imdbid=<xsl:value-of select="imdb"/></url>
                        </xsl:if>
                        <url><xsl:attribute name="function">GetSZArt</xsl:attribute><xsl:attribute name="cache">SZ.detail-<xsl:value-of select="$id"/>.xml</xsl:attribute>$$3</url>
                    </details>
                </xsl:template>
            </xsl:stylesheet>
        </XSLT>
    </GetDetails>

	<!-- input : $$1=episodeguide html -->
	<!-- input : $$2=episodeguide url -->
	<!-- output: <episodeguide><episode><title>*</title><url>*</url><season>*</season><epnum>*</epnum><thumb>*</thumb><id>*</id><aired>*</aired></episode>*</episodeguide> !-->
    <GetEpisodeList dest="8">
        <XSLT input="$$1" output="\1" dest="8">
            <xsl:stylesheet version = "1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                <xsl:output encoding="UTF-8" indent="yes"/>
                <xsl:strip-space elements="*"/>
                <xsl:template match="data">
                    <episodeguide>
                        <xsl:apply-templates/>
                    </episodeguide>
                </xsl:template>
                <xsl:template match="episode">
                    <episode>
                        <title><xsl:value-of select="cz"/><xsl:if test="'$INFO[szeorigname]' = 'true' and not(cz = en)"> (<xsl:value-of select="en"/>)</xsl:if></title>
                        <xsl:copy-of select="url|season|epnum"/>
                    </episode>
                </xsl:template>                
            </xsl:stylesheet>
        </XSLT>
    </GetEpisodeList>

	<!-- input : $$1=episode html -->
	<!-- input : $$2=id -->
	<!-- input : $$3=episode url -->
	<!-- output: <details><title>*</title><plot>*</plot><uniqueid>*</uniqueid><aired>*</aired><episode>*</episode><season>*</season></details> -->
    <GetEpisodeDetails dest="8">
        <XSLT input="$$1" output="\1" dest="8">
            <xsl:stylesheet version = "1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                <xsl:output encoding="UTF-8" indent="yes"/>
				<xsl:strip-space elements="*"/>
                <xsl:template match="data">
                    <xsl:variable name="id" select="substring-before(substring-after('$$3', '/xbmc/serial/'), '/')"/>
                    <details>
                        <title><xsl:value-of select="cz"/><xsl:if test="'$INFO[szeorigname]' = 'true' and not(cz = en)"> (<xsl:value-of select="en"/>)</xsl:if></title>
                        <originaltitle><xsl:value-of select="en"/></originaltitle>
                        <xsl:if test="not(imdb = 'tt0000000')">
                            <id><xsl:value-of select="imdb"/></id>
                            <uniqueid><xsl:attribute name="type">imdb</xsl:attribute><xsl:value-of select="imdb"/></uniqueid>
                        </xsl:if>                            
                        <aired><xsl:value-of select="firstaired"/></aired>
                        <xsl:if test="rating">
                            <rating><xsl:attribute name="max">100</xsl:attribute><xsl:value-of select="rating"/></rating>
                        </xsl:if>
                        <xsl:for-each select="creators/creator">
                            <credits><xsl:value-of select="name"/></credits>
                        </xsl:for-each>
                        <xsl:if test="directors/director/name">
                            <director><xsl:value-of select="directors/director/name"/></director>
                        </xsl:if>
                        <xsl:copy-of select="season|epnum|plot|runtime|votes|countries/*|actors/*"/>
                    </details>
                </xsl:template>
            </xsl:stylesheet>
        </XSLT>
    </GetEpisodeDetails>

    <GetTVDBSeries dest="8">
        <RegExp input="$$1" output="&lt;details&gt;&lt;url function=&quot;GetTVDBArt&quot; cache=&quot;TVDB.series-\1.xml&quot;&gt;http://thetvdb.com/api/1D62F2F90030C444/series/\1/banners.xml&lt;/url&gt;&lt;/details&gt;" dest="8">
            <expression noclean="1">&lt;seriesid&gt;([0-9]*)&lt;/seriesid&gt;</expression>
        </RegExp>
    </GetTVDBSeries>

    <GetTVDBArt dest="8">
        <RegExp input="$$7" output="&lt;details&gt;\1&lt;/details&gt;" dest="8">

            <!-- poster -->
            <RegExp conditional="szregional" input="$$1" output="&lt;thumb aspect=&quot;poster&quot; language=&quot;$INFO[szregionallang]&quot;&gt;http://thetvdb.com/banners/\1&lt;/thumb&gt;" dest="7+">
                <expression repeat="yes">&lt;BannerPath&gt;([^&lt;]*)&lt;/BannerPath&gt;[^&lt;]*&lt;BannerType&gt;poster&lt;/BannerType&gt;[^&lt;]*&lt;BannerType2&gt;[^&lt;]*&lt;/BannerType2&gt;[^&lt;]*&lt;Language&gt;\Q$INFO[szregionallang]\E&lt;/Language&gt;</expression>
            </RegExp>
            <RegExp input="$$1" output="&lt;thumb aspect=&quot;poster&quot; language=&quot;en&quot;&gt;http://thetvdb.com/banners/\1&lt;/thumb&gt;" dest="7+">
                <expression repeat="yes">&lt;BannerPath&gt;([^&lt;]*)&lt;/BannerPath&gt;[^&lt;]*&lt;BannerType&gt;poster&lt;/BannerType&gt;[^&lt;]*&lt;BannerType2&gt;[^&lt;]*&lt;/BannerType2&gt;[^&lt;]*&lt;Language&gt;en&lt;/Language&gt;</expression>
            </RegExp>
            <!-- season poster --> 
            <RegExp conditional="szregional" input="$$1" output="&lt;thumb aspect=&quot;poster&quot; type=&quot;season&quot; season=&quot;\2&quot; language=&quot;$INFO[szregionallang]&quot;&gt;http://thetvdb.com/banners/\1&lt;/thumb&gt;" dest="7+">
                <expression repeat="yes">&lt;BannerPath&gt;([^&lt;]*)&lt;/BannerPath&gt;[^&lt;]*&lt;BannerType&gt;season&lt;/BannerType&gt;[^&lt;]*&lt;BannerType2&gt;season&lt;/BannerType2&gt;[^&lt;]*&lt;Language&gt;\Q$INFO[szregionallang]\E&lt;/Language&gt;(?:[^&lt;]*&lt;/?Rating&gt;)*(?:[^&lt;]*&lt;/?Ratingcount&gt;)*[^&lt;]*&lt;Season&gt;([0-9]+)&lt;/Season&gt;</expression>
            </RegExp>
            <RegExp input="$$1" output="&lt;thumb aspect=&quot;poster&quot; type=&quot;season&quot; season=&quot;\2&quot; language=&quot;en&quot;&gt;http://thetvdb.com/banners/\1&lt;/thumb&gt;" dest="7+">
                <expression repeat="yes">&lt;BannerPath&gt;([^&lt;]*)&lt;/BannerPath&gt;[^&lt;]*&lt;BannerType&gt;season&lt;/BannerType&gt;[^&lt;]*&lt;BannerType2&gt;season&lt;/BannerType2&gt;[^&lt;]*&lt;Language&gt;en&lt;/Language&gt;(?:[^&lt;]*&lt;/?Rating&gt;)*(?:[^&lt;]*&lt;/?Ratingcount&gt;)*[^&lt;]*&lt;Season&gt;([0-9]+)&lt;/Season&gt;</expression>
            </RegExp>
            <!-- banner -->
            <RegExp conditional="szregional" input="$$1" output="&lt;thumb aspect=&quot;banner&quot; language=&quot;$INFO[szregionallang]&quot;&gt;http://thetvdb.com/banners/\1&lt;/thumb&gt;" dest="7+">
                <expression repeat="yes">&lt;BannerPath&gt;([^&lt;]*)&lt;/BannerPath&gt;[^&lt;]*&lt;BannerType&gt;series&lt;/BannerType&gt;[^&lt;]*&lt;BannerType2&gt;graphical&lt;/BannerType2&gt;[^&lt;]*&lt;Language&gt;\Q$INFO[szregionallang]\E&lt;/Language&gt;</expression>
            </RegExp>
            <RegExp input="$$1" output="&lt;thumb aspect=&quot;banner&quot; language=&quot;en&quot;&gt;http://thetvdb.com/banners/\1&lt;/thumb&gt;" dest="7+">
                <expression repeat="yes">&lt;BannerPath&gt;([^&lt;]*)&lt;/BannerPath&gt;[^&lt;]*&lt;BannerType&gt;series&lt;/BannerType&gt;[^&lt;]*&lt;BannerType2&gt;graphical&lt;/BannerType2&gt;[^&lt;]*&lt;Language&gt;en&lt;/Language&gt;</expression>
            </RegExp>
            <RegExp conditional="szregional" input="$$1" output="&lt;thumb aspect=&quot;banner&quot; language=&quot;$INFO[szregionallang]&quot;&gt;http://thetvdb.com/banners/\1&lt;/thumb&gt;" dest="7+">
                <expression repeat="yes">&lt;BannerPath&gt;([^&lt;]*)&lt;/BannerPath&gt;[^&lt;]*&lt;BannerType&gt;series&lt;/BannerType&gt;[^&lt;]*&lt;BannerType2&gt;text&lt;/BannerType2&gt;[^&lt;]*&lt;Language&gt;\Q$INFO[szregionallang]\E&lt;/Language&gt;</expression>
            </RegExp>
            <RegExp input="$$1" output="&lt;thumb aspect=&quot;banner&quot; language=&quot;en&quot;&gt;http://thetvdb.com/banners/\1&lt;/thumb&gt;" dest="7+">
                <expression repeat="yes">&lt;BannerPath&gt;([^&lt;]*)&lt;/BannerPath&gt;[^&lt;]*&lt;BannerType&gt;series&lt;/BannerType&gt;[^&lt;]*&lt;BannerType2&gt;text&lt;/BannerType2&gt;[^&lt;]*&lt;Language&gt;en&lt;/Language&gt;</expression>
            </RegExp>
            <RegExp input="$$1" output="&lt;thumb aspect=&quot;banner&quot;&gt;http://thetvdb.com/banners/\1&lt;/thumb&gt;" dest="7+">
                <expression repeat="yes">&lt;BannerPath&gt;([^&lt;]*)&lt;/BannerPath&gt;[^&lt;]*&lt;BannerType&gt;series&lt;/BannerType&gt;[^&lt;]*&lt;BannerType2&gt;blank&lt;/BannerType2&gt;</expression>
            </RegExp>
            <!-- season banner -->
            <RegExp conditional="szregional" input="$$1" output="&lt;thumb aspect=&quot;banner&quot; type=&quot;season&quot; season=&quot;\2&quot; language=&quot;$INFO[szregionallang]&quot;&gt;http://thetvdb.com/banners/\1&lt;/thumb&gt;" dest="7+">
                <expression repeat="yes">&lt;BannerPath&gt;([^&lt;]*)&lt;/BannerPath&gt;[^&lt;]*&lt;BannerType&gt;season&lt;/BannerType&gt;[^&lt;]*&lt;BannerType2&gt;seasonwide&lt;/BannerType2&gt;[^&lt;]*&lt;Language&gt;\Q$INFO[szregionallang]\E&lt;/Language&gt;[^&lt;]*.*?&lt;Season&gt;([0-9]+)&lt;/Season&gt;</expression>
            </RegExp>
            <RegExp input="$$1" output="&lt;thumb aspect=&quot;banner&quot; type=&quot;season&quot; season=&quot;\2&quot; language=&quot;en&quot;&gt;http://thetvdb.com/banners/\1&lt;/thumb&gt;" dest="7+">
                <expression repeat="yes">&lt;BannerPath&gt;([^&lt;]*)&lt;/BannerPath&gt;[^&lt;]*&lt;BannerType&gt;season&lt;/BannerType&gt;[^&lt;]*&lt;BannerType2&gt;seasonwide&lt;/BannerType2&gt;[^&lt;]*&lt;Language&gt;en&lt;/Language&gt;[^&lt;]*.*?&lt;Season&gt;([0-9]+)&lt;/Season&gt;</expression>
            </RegExp>
            <!-- fanart -->
            <RegExp input="$$6" output="&lt;fanart url=&quot;http://thetvdb.com/banners/&quot;&gt;\1&lt;/fanart&gt;" dest="7+">
                <RegExp conditional="szregional" input="$$1" output="&lt;thumb dim=&quot;\2&quot; colors=&quot;\3&quot; preview=&quot;_cache/\1&quot; language=&quot;$INFO[szregionallang]&quot;&gt;\1&lt;/thumb&gt;" dest="6">
                    <expression repeat="yes">&lt;BannerPath&gt;([^&lt;]*)&lt;/BannerPath&gt;[^&lt;]*&lt;BannerType&gt;fanart&lt;/BannerType&gt;[^&lt;]*&lt;BannerType2&gt;([^&lt;]*)&lt;/BannerType2&gt;[^&lt;]*&lt;Colors(?:/|&gt;[^&lt;]*&lt;/Colors)&gt;[^&lt;]*&lt;Language&gt;\Q$INFO[szregionallang]\E&lt;/Language&gt;</expression>
                </RegExp>
                <RegExp input="$$1" output="&lt;thumb dim=&quot;\2&quot; colors=&quot;\3&quot; preview=&quot;_cache/\1&quot; language=&quot;en&quot;&gt;\1&lt;/thumb&gt;" dest="6+">
                    <expression repeat="yes">&lt;BannerPath&gt;([^&lt;]*)&lt;/BannerPath&gt;[^&lt;]*&lt;BannerType&gt;fanart&lt;/BannerType&gt;[^&lt;]*&lt;BannerType2&gt;([^&lt;]*)&lt;/BannerType2&gt;[^&lt;]*&lt;Colors(?:/|&gt;[^&lt;]*&lt;/Colors)&gt;[^&lt;]*&lt;Language&gt;en&lt;/Language&gt;</expression>
                </RegExp>
                <expression noclean="1"/>
            </RegExp>
            <expression noclean="1"/>
        </RegExp> 
    </GetTVDBArt>

    <GetSZArt dest="8">
        <XSLT input="$$1" output="\1" dest="8">
            <xsl:stylesheet version = "1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                <xsl:output encoding="UTF-8" indent="yes"/>
				<xsl:strip-space elements="*"/>
                <xsl:template match="text()"/>
                <xsl:template match="data">
                    <details>
                        <xsl:apply-templates/>
                    </details>
                </xsl:template>
                <xsl:template match="poster">
                    <thumb><xsl:attribute name="aspect">poster</xsl:attribute><xsl:value-of select="."/></thumb>
                </xsl:template>
                <xsl:template match="banners">
                    <xsl:apply-templates/>
                    <fanart>
                        <xsl:apply-templates/>
                    </fanart>
                </xsl:template>
                <xsl:template match="banner[@serie]">
                    <thumb><xsl:attribute name="aspect">banner</xsl:attribute>
                           <xsl:attribute name="type">season</xsl:attribute>
                           <xsl:attribute name="season"><xsl:value-of select="./@serie"/></xsl:attribute>
                           <xsl:value-of select="."/>
                    </thumb>
                </xsl:template>
                <xsl:template match="banner">
                    <thumb><xsl:attribute name="aspect">banner</xsl:attribute>
                           <xsl:value-of select="."/>
                    </thumb>
                </xsl:template>
            </xsl:stylesheet>
        </XSLT>        
    </GetSZArt>
</scraper>
